<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.2.2 (Python 3.13.3 on win32)" generated="2025-05-04T15:08:10.479638" rpa="false" schemaversion="5">
<suite id="s1" name="Tests" source="C:\Users\ymokhtari\PycharmProjects\APIAutomation\Tests">
<suite id="s1-s1" name="Books" source="C:\Users\ymokhtari\PycharmProjects\APIAutomation\Tests\Books.robot">
<test id="s1-s1-t1" name="Retrieve All Books And Validate Books JSON With Schema" line="6">
<kw name="Get All Books" owner="book_keywords">
<msg time="2025-05-04T15:08:10.957253" level="TRACE">Arguments: [  ]</msg>
<kw name="Create Api Session" owner="common">
<msg time="2025-05-04T15:08:10.957481" level="TRACE">Arguments: [  ]</msg>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-05-04T15:08:10.957849" level="TRACE">Arguments: [ 'apisession' | 'https://simple-books-api.glitch.me/' | verify=True ]</msg>
<msg time="2025-05-04T15:08:10.957923" level="INFO">Creating Session using : alias=apisession, url=https://simple-books-api.glitch.me/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<msg time="2025-05-04T15:08:10.957942" level="DEBUG">Creating session: apisession</msg>
<msg time="2025-05-04T15:08:10.958048" level="TRACE">Return: &lt;requests.sessions.Session object at 0x000002B36BB52F90&gt;</msg>
<arg>apisession</arg>
<arg>${BASE_URL}</arg>
<arg>verify=True</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-05-04T15:08:10.957750" elapsed="0.000327"/>
</kw>
<msg time="2025-05-04T15:08:10.958129" level="TRACE">Return: None</msg>
<doc>Creates a session for authentication requests</doc>
<status status="PASS" start="2025-05-04T15:08:10.957401" elapsed="0.000749"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-05-04T15:08:10.958280" level="TRACE">Arguments: [ 'apisession' | '/books/' | expected_status='200' ]</msg>
<msg time="2025-05-04T15:08:10.959907" level="DEBUG">Starting new HTTPS connection (1): simple-books-api.glitch.me:443</msg>
<msg time="2025-05-04T15:08:11.259515" level="DEBUG">https://simple-books-api.glitch.me:443 "GET /books/ HTTP/1.1" 200 417</msg>
<msg time="2025-05-04T15:08:11.259796" level="INFO">GET Request : url=https://simple-books-api.glitch.me/books/ 
 path_url=/books/ 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-05-04T15:08:11.259870" level="INFO">GET Response : url=https://simple-books-api.glitch.me/books/ 
 status=200, reason=OK 
 headers={'Connection': 'keep-alive', 'Content-Length': '417', 'etag': 'W/"1a1-MfqhfTYtZO2sguD1mJq8Vf41WjU"', 'content-type': 'application/json; charset=utf-8', 'x-powered-by': 'Express', 'Accept-Ranges': 'bytes', 'Date': 'Sun, 04 May 2025 14:08:09 GMT', 'Via': '1.1 varnish', 'X-Served-By': 'cache-lis1490030-LIS, cache-lis1490030-LIS', 'X-Cache': 'MISS, MISS', 'X-Cache-Hits': '0, 0', 'X-Timer': 'S1746367689.994560,VS0,VE124'} 
 body=[{"id":1,"name":"The Russian","type":"fiction","available":true},{"id":2,"name":"Just as I Am","type":"non-fiction","available":false},{"id":3,"name":"The Vanishing Half","type":"fiction","available":true},{"id":4,"name":"The Midnight Library","type":"fiction","available":true},{"id":5,"name":"Untamed","type":"non-fiction","available":true},{"id":6,"name":"Viscount Who Loved Me","type":"fiction","available":true}] 
 </msg>
<msg time="2025-05-04T15:08:11.259919" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg time="2025-05-04T15:08:11.259994" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<var>${resp}</var>
<arg>apisession</arg>
<arg>${ENDPOINT_BOOKS}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-05-04T15:08:10.958219" elapsed="0.301790"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-05-04T15:08:11.260462" level="TRACE">Arguments: [ [{'id': 1, 'name': 'The Russian', 'type': 'fiction', 'available': True},
 {'id': 2, 'name': 'Just as I Am', 'type': 'non-fiction', 'available': False},
 {'id': 3, 'name': 'The Vanishing Half', 'type': 'fiction', 'available': True},
 {'id': 4,
  'name': 'The Midnight Library',
  'type': 'fiction',
  'available': True},
 {'id': 5, 'name': 'Untamed', 'type': 'non-fiction', 'available': True},
 {'id': 6,
  'name': 'Viscount Who Loved Me',
  'type': 'fiction',
  'available': True}] ]</msg>
<msg time="2025-05-04T15:08:11.260611" level="TRACE">Return: [{'id': 1, 'name': 'The Russian', 'type': 'fiction', 'available': True},
 {'id': 2, 'name': 'Just as I Am', 'type': 'non-fiction', 'available': False},
 {'id': 3, 'name': 'The Vanishing Half', 'type': 'fiction', 'available': True},
 {'id': 4,
  'name': 'The Midnight Library',
  'type': 'fiction',
  'available': True},
 {'id': 5, 'name': 'Untamed', 'type': 'non-fiction', 'available': True},
 {'id': 6,
  'name': 'Viscount Who Loved Me',
  'type': 'fiction',
  'available': True}]</msg>
<msg time="2025-05-04T15:08:11.260731" level="INFO">${books} = [{'id': 1, 'name': 'The Russian', 'type': 'fiction', 'available': True}, {'id': 2, 'name': 'Just as I Am', 'type': 'non-fiction', 'available': False}, {'id': 3, 'name': 'The Vanishing Half', 'type': '...</msg>
<var>${books}</var>
<arg>${resp.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-05-04T15:08:11.260129" elapsed="0.000617"/>
</kw>
<return>
<value>${books}</value>
<status status="PASS" start="2025-05-04T15:08:11.260788" elapsed="0.000039"/>
</return>
<msg time="2025-05-04T15:08:11.260897" level="TRACE">Return: [{'id': 1, 'name': 'The Russian', 'type': 'fiction', 'available': True},
 {'id': 2, 'name': 'Just as I Am', 'type': 'non-fiction', 'available': False},
 {'id': 3, 'name': 'The Vanishing Half', 'type': 'fiction', 'available': True},
 {'id': 4,
  'name': 'The Midnight Library',
  'type': 'fiction',
  'available': True},
 {'id': 5, 'name': 'Untamed', 'type': 'non-fiction', 'available': True},
 {'id': 6,
  'name': 'Viscount Who Loved Me',
  'type': 'fiction',
  'available': True}]</msg>
<msg time="2025-05-04T15:08:11.261012" level="INFO">${books} = [{'id': 1, 'name': 'The Russian', 'type': 'fiction', 'available': True}, {'id': 2, 'name': 'Just as I Am', 'type': 'non-fiction', 'available': False}, {'id': 3, 'name': 'The Vanishing Half', 'type': '...</msg>
<var>${books}</var>
<status status="PASS" start="2025-05-04T15:08:10.956901" elapsed="0.304126"/>
</kw>
<kw name="Book Schema Validator" owner="book_keywords">
<msg time="2025-05-04T15:08:11.261494" level="TRACE">Arguments: [ ${books}=[{'id': 1, 'name': 'The Russian', 'type': 'fiction', 'available': True},
 {'id': 2, 'name': 'Just as I Am', 'type': 'non-fiction', 'available': False},
 {'id': 3, 'name': 'The Vanishing Half', 'type': 'fiction', 'available': True},
 {'id': 4,
  'name': 'The Midnight Library',
  'type': 'fiction',
  'available': True},
 {'id': 5, 'name': 'Untamed', 'type': 'non-fiction', 'available': True},
 {'id': 6,
  'name': 'Viscount Who Loved Me',
  'type': 'fiction',
  'available': True}] ]</msg>
<for flavor="IN">
<iter>
<kw name="Validate Book With Schema" owner="book_keywords">
<msg time="2025-05-04T15:08:11.261878" level="TRACE">Arguments: [ ${book}={'id': 1, 'name': 'The Russian', 'type': 'fiction', 'available': True} ]</msg>
<kw name="Validate Response With Schema" owner="common">
<msg time="2025-05-04T15:08:11.262065" level="TRACE">Arguments: [ ${resp}={'id': 1, 'name': 'The Russian', 'type': 'fiction', 'available': True} | ${SCHEMA}='book_schema.json' ]</msg>
<kw name="Validate Json" owner="JSONSchemaLibrary">
<msg time="2025-05-04T15:08:11.262209" level="TRACE">Arguments: [ 'book_schema.json' | {'id': 1, 'name': 'The Russian', 'type': 'fiction', 'available': True} ]</msg>
<msg time="2025-05-04T15:08:11.264955" level="TRACE">Return: None</msg>
<arg>${SCHEMA}</arg>
<arg>${resp}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" start="2025-05-04T15:08:11.262156" elapsed="0.002833"/>
</kw>
<msg time="2025-05-04T15:08:11.265115" level="TRACE">Return: None</msg>
<arg>${book}</arg>
<arg>${BOOK_SCHEMA}</arg>
<status status="PASS" start="2025-05-04T15:08:11.261967" elapsed="0.003173"/>
</kw>
<msg time="2025-05-04T15:08:11.265167" level="TRACE">Return: None</msg>
<arg>${book}</arg>
<status status="PASS" start="2025-05-04T15:08:11.261791" elapsed="0.003393"/>
</kw>
<var name="${book}">{'id': 1, 'name': 'The Russian', 'type': 'fiction', 'available': True}</var>
<status status="PASS" start="2025-05-04T15:08:11.261733" elapsed="0.003468"/>
</iter>
<iter>
<kw name="Validate Book With Schema" owner="book_keywords">
<msg time="2025-05-04T15:08:11.265432" level="TRACE">Arguments: [ ${book}={'id': 2, 'name': 'Just as I Am', 'type': 'non-fiction', 'available': False} ]</msg>
<kw name="Validate Response With Schema" owner="common">
<msg time="2025-05-04T15:08:11.265619" level="TRACE">Arguments: [ ${resp}={'id': 2, 'name': 'Just as I Am', 'type': 'non-fiction', 'available': False} | ${SCHEMA}='book_schema.json' ]</msg>
<kw name="Validate Json" owner="JSONSchemaLibrary">
<msg time="2025-05-04T15:08:11.265765" level="TRACE">Arguments: [ 'book_schema.json' | {'id': 2, 'name': 'Just as I Am', 'type': 'non-fiction', 'available': False} ]</msg>
<msg time="2025-05-04T15:08:11.266399" level="TRACE">Return: None</msg>
<arg>${SCHEMA}</arg>
<arg>${resp}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" start="2025-05-04T15:08:11.265710" elapsed="0.000717"/>
</kw>
<msg time="2025-05-04T15:08:11.266460" level="TRACE">Return: None</msg>
<arg>${book}</arg>
<arg>${BOOK_SCHEMA}</arg>
<status status="PASS" start="2025-05-04T15:08:11.265520" elapsed="0.000957"/>
</kw>
<msg time="2025-05-04T15:08:11.266501" level="TRACE">Return: None</msg>
<arg>${book}</arg>
<status status="PASS" start="2025-05-04T15:08:11.265335" elapsed="0.001182"/>
</kw>
<var name="${book}">{'id': 2, 'name': 'Just as I Am', 'type': 'non-fiction', 'available': False}</var>
<status status="PASS" start="2025-05-04T15:08:11.265271" elapsed="0.001262"/>
</iter>
<iter>
<kw name="Validate Book With Schema" owner="book_keywords">
<msg time="2025-05-04T15:08:11.266744" level="TRACE">Arguments: [ ${book}={'id': 3, 'name': 'The Vanishing Half', 'type': 'fiction', 'available': True} ]</msg>
<kw name="Validate Response With Schema" owner="common">
<msg time="2025-05-04T15:08:11.266936" level="TRACE">Arguments: [ ${resp}={'id': 3, 'name': 'The Vanishing Half', 'type': 'fiction', 'available': True} | ${SCHEMA}='book_schema.json' ]</msg>
<kw name="Validate Json" owner="JSONSchemaLibrary">
<msg time="2025-05-04T15:08:11.267082" level="TRACE">Arguments: [ 'book_schema.json' | {'id': 3, 'name': 'The Vanishing Half', 'type': 'fiction', 'available': True} ]</msg>
<msg time="2025-05-04T15:08:11.267696" level="TRACE">Return: None</msg>
<arg>${SCHEMA}</arg>
<arg>${resp}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" start="2025-05-04T15:08:11.267033" elapsed="0.000691"/>
</kw>
<msg time="2025-05-04T15:08:11.267756" level="TRACE">Return: None</msg>
<arg>${book}</arg>
<arg>${BOOK_SCHEMA}</arg>
<status status="PASS" start="2025-05-04T15:08:11.266837" elapsed="0.000937"/>
</kw>
<msg time="2025-05-04T15:08:11.267796" level="TRACE">Return: None</msg>
<arg>${book}</arg>
<status status="PASS" start="2025-05-04T15:08:11.266651" elapsed="0.001161"/>
</kw>
<var name="${book}">{'id': 3, 'name': 'The Vanishing Half', 'type': 'fiction', 'available': True}</var>
<status status="PASS" start="2025-05-04T15:08:11.266591" elapsed="0.001235"/>
</iter>
<iter>
<kw name="Validate Book With Schema" owner="book_keywords">
<msg time="2025-05-04T15:08:11.268022" level="TRACE">Arguments: [ ${book}={'id': 4, 'name': 'The Midnight Library', 'type': 'fiction', 'available': True} ]</msg>
<kw name="Validate Response With Schema" owner="common">
<msg time="2025-05-04T15:08:11.268210" level="TRACE">Arguments: [ ${resp}={'id': 4, 'name': 'The Midnight Library', 'type': 'fiction', 'available': True} | ${SCHEMA}='book_schema.json' ]</msg>
<kw name="Validate Json" owner="JSONSchemaLibrary">
<msg time="2025-05-04T15:08:11.268341" level="TRACE">Arguments: [ 'book_schema.json' | {'id': 4, 'name': 'The Midnight Library', 'type': 'fiction', 'available': True} ]</msg>
<msg time="2025-05-04T15:08:11.268931" level="TRACE">Return: None</msg>
<arg>${SCHEMA}</arg>
<arg>${resp}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" start="2025-05-04T15:08:11.268292" elapsed="0.000671"/>
</kw>
<msg time="2025-05-04T15:08:11.268995" level="TRACE">Return: None</msg>
<arg>${book}</arg>
<arg>${BOOK_SCHEMA}</arg>
<status status="PASS" start="2025-05-04T15:08:11.268114" elapsed="0.000899"/>
</kw>
<msg time="2025-05-04T15:08:11.269035" level="TRACE">Return: None</msg>
<arg>${book}</arg>
<status status="PASS" start="2025-05-04T15:08:11.267934" elapsed="0.001118"/>
</kw>
<var name="${book}">{'id': 4, 'name': 'The Midnight Library', 'type': 'fiction', 'available': True}</var>
<status status="PASS" start="2025-05-04T15:08:11.267879" elapsed="0.001188"/>
</iter>
<iter>
<kw name="Validate Book With Schema" owner="book_keywords">
<msg time="2025-05-04T15:08:11.269270" level="TRACE">Arguments: [ ${book}={'id': 5, 'name': 'Untamed', 'type': 'non-fiction', 'available': True} ]</msg>
<kw name="Validate Response With Schema" owner="common">
<msg time="2025-05-04T15:08:11.269451" level="TRACE">Arguments: [ ${resp}={'id': 5, 'name': 'Untamed', 'type': 'non-fiction', 'available': True} | ${SCHEMA}='book_schema.json' ]</msg>
<kw name="Validate Json" owner="JSONSchemaLibrary">
<msg time="2025-05-04T15:08:11.269581" level="TRACE">Arguments: [ 'book_schema.json' | {'id': 5, 'name': 'Untamed', 'type': 'non-fiction', 'available': True} ]</msg>
<msg time="2025-05-04T15:08:11.270176" level="TRACE">Return: None</msg>
<arg>${SCHEMA}</arg>
<arg>${resp}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" start="2025-05-04T15:08:11.269532" elapsed="0.000675"/>
</kw>
<msg time="2025-05-04T15:08:11.270240" level="TRACE">Return: None</msg>
<arg>${book}</arg>
<arg>${BOOK_SCHEMA}</arg>
<status status="PASS" start="2025-05-04T15:08:11.269354" elapsed="0.000905"/>
</kw>
<msg time="2025-05-04T15:08:11.270282" level="TRACE">Return: None</msg>
<arg>${book}</arg>
<status status="PASS" start="2025-05-04T15:08:11.269182" elapsed="0.001117"/>
</kw>
<var name="${book}">{'id': 5, 'name': 'Untamed', 'type': 'non-fiction', 'available': True}</var>
<status status="PASS" start="2025-05-04T15:08:11.269123" elapsed="0.001191"/>
</iter>
<iter>
<kw name="Validate Book With Schema" owner="book_keywords">
<msg time="2025-05-04T15:08:11.270512" level="TRACE">Arguments: [ ${book}={'id': 6, 'name': 'Viscount Who Loved Me', 'type': 'fiction', 'available': True} ]</msg>
<kw name="Validate Response With Schema" owner="common">
<msg time="2025-05-04T15:08:11.270695" level="TRACE">Arguments: [ ${resp}={'id': 6, 'name': 'Viscount Who Loved Me', 'type': 'fiction', 'available': True} | ${SCHEMA}='book_schema.json' ]</msg>
<kw name="Validate Json" owner="JSONSchemaLibrary">
<msg time="2025-05-04T15:08:11.270834" level="TRACE">Arguments: [ 'book_schema.json' | {'id': 6, 'name': 'Viscount Who Loved Me', 'type': 'fiction', 'available': True} ]</msg>
<msg time="2025-05-04T15:08:11.271424" level="TRACE">Return: None</msg>
<arg>${SCHEMA}</arg>
<arg>${resp}</arg>
<doc>Validates the sample JSON against the given schema.</doc>
<status status="PASS" start="2025-05-04T15:08:11.270782" elapsed="0.000669"/>
</kw>
<msg time="2025-05-04T15:08:11.271483" level="TRACE">Return: None</msg>
<arg>${book}</arg>
<arg>${BOOK_SCHEMA}</arg>
<status status="PASS" start="2025-05-04T15:08:11.270596" elapsed="0.000904"/>
</kw>
<msg time="2025-05-04T15:08:11.271524" level="TRACE">Return: None</msg>
<arg>${book}</arg>
<status status="PASS" start="2025-05-04T15:08:11.270424" elapsed="0.001116"/>
</kw>
<var name="${book}">{'id': 6, 'name': 'Viscount Who Loved Me', 'type': 'fiction', 'available': True}</var>
<status status="PASS" start="2025-05-04T15:08:11.270367" elapsed="0.001239"/>
</iter>
<var>${book}</var>
<value>@{books}</value>
<status status="PASS" start="2025-05-04T15:08:11.261644" elapsed="0.009985"/>
</for>
<msg time="2025-05-04T15:08:11.271659" level="TRACE">Return: None</msg>
<arg>${books}</arg>
<status status="PASS" start="2025-05-04T15:08:11.261377" elapsed="0.010302"/>
</kw>
<tag>ValidateBooksSchema</tag>
<status status="PASS" start="2025-05-04T15:08:10.956408" elapsed="0.315523"/>
</test>
<status status="PASS" start="2025-05-04T15:08:10.502217" elapsed="0.770440"/>
</suite>
<meta name="Randomized">Suites and tests (seed 6892896698219892039)</meta>
<status status="PASS" start="2025-05-04T15:08:10.480536" elapsed="0.792967"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">ValidateBooksSchema</stat>
</tag>
<suite>
<stat name="Tests" id="s1" pass="1" fail="0" skip="0">Tests</stat>
<stat name="Books" id="s1-s1" pass="1" fail="0" skip="0">Tests.Books</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
